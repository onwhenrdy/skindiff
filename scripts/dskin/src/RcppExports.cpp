// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// getGeometry
Rcpp::List getGeometry(std::string json_parameter);
RcppExport SEXP _dskin_getGeometry(SEXP json_parameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< std::string >::type json_parameter(json_parameterSEXP);
    rcpp_result_gen = Rcpp::wrap(getGeometry(json_parameter));
    return rcpp_result_gen;
END_RCPP
}
// simulate
Rcpp::List simulate(std::string json_parameter, bool write_to_R, bool write_to_files);
RcppExport SEXP _dskin_simulate(SEXP json_parameterSEXP, SEXP write_to_RSEXP, SEXP write_to_filesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< std::string >::type json_parameter(json_parameterSEXP);
    Rcpp::traits::input_parameter< bool >::type write_to_R(write_to_RSEXP);
    Rcpp::traits::input_parameter< bool >::type write_to_files(write_to_filesSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate(json_parameter, write_to_R, write_to_files));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dskin_getGeometry", (DL_FUNC) &_dskin_getGeometry, 1},
    {"_dskin_simulate", (DL_FUNC) &_dskin_simulate, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_dskin(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
